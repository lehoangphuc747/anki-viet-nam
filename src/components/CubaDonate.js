import React, { useState, useEffect } from 'react';

// --- Component ch√≠nh ---
export default function App() {
  // State ƒë·ªÉ qu·∫£n l√Ω vi·ªác hi·ªÉn th·ªã popup
  const [showPopup, setShowPopup] = useState(false);
  // State ƒë·ªÉ qu·∫£n l√Ω l·ª±a ch·ªçn ghi nh·ªõ c·ªßa ng∆∞·ªùi d√πng
  const [rememberChoice, setRememberChoice] = useState(false);

  // Ki·ªÉm tra localStorage khi component ƒë∆∞·ª£c mount l·∫ßn ƒë·∫ßu
  useEffect(() => {
    const hasBeenHidden = localStorage.getItem('hideAnkiVnPopup');
    if (!hasBeenHidden) {
      setShowPopup(true);
    }
  }, []);

  // H√†m x·ª≠ l√Ω sao ch√©p n·ªôi dung
  const handleCopy = (textToCopy) => {
    const textArea = document.createElement('textarea');
    textArea.value = textToCopy;
    document.body.appendChild(textArea);
    textArea.select();
    try {
      document.execCommand('copy');
      console.log(`${textToCopy} ƒë√£ ƒë∆∞·ª£c sao ch√©p!`);
    } catch (err) {
      console.error('Kh√¥ng th·ªÉ sao ch√©p: ', err);
    }
    document.body.removeChild(textArea);
  };
  
  // H√†m ƒë√≥ng popup v√† ghi nh·ªõ l·ª±a ch·ªçn n·∫øu √¥ ƒë√£ ƒë∆∞·ª£c tick
  const handleClose = () => {
      if (rememberChoice) {
          localStorage.setItem('hideAnkiVnPopup', 'true');
      }
      setShowPopup(false);
  };

  if (!showPopup) {
    return null;
  }

  return (
    // L·ªõp ph·ªß n·ªÅn cho popup, z-index r·∫•t cao v√† cƒÉn gi·ªØa
    <div className="fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-[9999] p-4 font-sans transition-opacity duration-300">
      
      {/* Container c·ªßa popup: c√≥ gi·ªõi h·∫°n chi·ªÅu cao t·ªëi ƒëa */}
      <div className="relative w-[90%] md:w-[60%] max-w-xl bg-white rounded-2xl shadow-lg transform transition-all duration-300 scale-100 flex flex-col max-h-[90vh]">
        
        {/* N·ªôi dung c√≥ th·ªÉ cu·ªôn */}
        <div className="overflow-y-auto p-4 sm:p-5">
          {/* Ti√™u ƒë·ªÅ th√¥ng b√°o */}
          <h1 className="text-lg md:text-xl font-bold text-gray-800 text-center mb-2">
            üì¢ Th√¥ng b√°o
          </h1>

          {/* N·ªôi dung ch√≠nh */}
          <p className="text-sm text-gray-600 text-center mb-3 leading-relaxed">
            T·ª´ h√¥m nay ƒë·∫øn h·∫øt 16/10/2025, AnkiVN.com s·∫Ω thu ph√≠ s·ª≠ d·ª•ng trang web.
            M·ªói ng∆∞·ªùi vui l√≤ng ƒë√≥ng g√≥p t·ª´ <strong className="font-semibold text-indigo-600">10.000ƒë</strong> tr·ªü l√™n ƒë·ªÉ duy tr√¨ ho·∫°t ƒë·ªông.
          </p>

          {/* Khung th√¥ng tin chuy·ªÉn kho·∫£n */}
          <div className="bg-gray-50 border-2 border-dashed border-gray-200 rounded-lg p-3 mb-3">
            <h2 className="text-sm font-semibold text-gray-700 mb-2 text-center">
              üìå Th√¥ng tin chuy·ªÉn kho·∫£n
            </h2>
            <div className="space-y-2 text-gray-700 text-sm">
              {/* Ng√¢n h√†ng */}
              <div className="flex justify-between items-center">
                <span className="font-medium">Ng√¢n h√†ng:</span>
                <span className="font-mono text-gray-800 text-right">Ng√¢n h√†ng Qu√¢n ƒë·ªôi (MB)</span>
              </div>
              <hr className="border-gray-100"/>
              {/* S·ªë t√†i kho·∫£n */}
              <div className="flex justify-between items-center">
                <span className="font-medium">S·ªë TK:</span>
                <div className="flex items-center gap-2">
                  <span className="font-mono text-blue-600 font-bold text-base">2022</span>
                  <button onClick={() => handleCopy('2022')} className="text-xs font-semibold text-gray-600 hover:text-gray-800 bg-gray-200 hover:bg-gray-300 px-2 py-1 rounded-md transition-colors duration-200" title="Sao ch√©p s·ªë t√†i kho·∫£n">
                    Copy
                  </button>
                </div>
              </div>
               <hr className="border-gray-100"/>
              {/* Ch·ªß t√†i kho·∫£n */}
              <div className="flex justify-between items-start text-right">
                <span className="font-medium whitespace-nowrap mr-2">Ch·ªß TK:</span>
                <span className="font-mono text-gray-800">TW H·ªòI CH·ªÆ TH·∫¨P ƒê·ªé VI·ªÜT NAM</span>
              </div>
               <hr className="border-gray-100"/>
              {/* N·ªôi dung chuy·ªÉn kho·∫£n */}
              <div className="flex justify-between items-center">
                <span className="font-medium">N·ªôi dung:</span>
                 <div className="flex items-center gap-2">
                  <span className="font-mono text-red-600 bg-red-100 px-2 py-1 rounded font-bold">CUBA</span>
                   <button onClick={() => handleCopy('CUBA')} className="text-xs font-semibold text-gray-600 hover:text-gray-800 bg-gray-200 hover:bg-gray-300 px-2 py-1 rounded-md transition-colors duration-200" title="Sao ch√©p n·ªôi dung">
                    Copy
                   </button>
                </div>
              </div>
            </div>
          </div>
          
          {/* Checkbox ghi nh·ªõ l·ª±a ch·ªçn */}
          <div className="flex items-center justify-center mb-3">
            <input
                type="checkbox"
                id="remember-choice"
                checked={rememberChoice}
                onChange={(e) => setRememberChoice(e.target.checked)}
                className="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded cursor-pointer"
            />
            <label htmlFor="remember-choice" className="ml-2 block text-sm text-gray-700 cursor-pointer select-none">
                Kh√¥ng hi·ªÉn th·ªã l·∫°i
            </label>
          </div>

          {/* N√∫t ƒê√≥ng/X√°c nh·∫≠n */}
          <button 
              onClick={handleClose}
              className="w-full bg-indigo-600 text-white font-bold py-2.5 px-4 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-4 focus:ring-indigo-300 transition-all duration-300 ease-in-out text-sm"
          >
              ƒê√≥ng th√¥ng b√°o
          </button>
        </div>
      </div>
    </div>
  );
}